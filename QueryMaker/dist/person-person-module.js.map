{"version":3,"sources":["webpack:///./src/app/layout/person/addperson/addperson.component.html","webpack:///./src/app/layout/person/addperson/addperson.component.scss","webpack:///./src/app/layout/person/addperson/addperson.component.ts","webpack:///./src/app/layout/person/person-routing.module.ts","webpack:///./src/app/layout/person/person.component.html","webpack:///./src/app/layout/person/person.component.scss","webpack:///./src/app/layout/person/person.component.ts","webpack:///./src/app/layout/person/person.module.ts","webpack:///./src/app/layout/person/person.service.ts"],"names":[],"mappings":"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","file":"person-person-module.js","sourcesContent":["module.exports = \"<p>\\n  addperson works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wZXJzb24vYWRkcGVyc29uL2FkZHBlcnNvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-addperson',\n  templateUrl: './addperson.component.html',\n  styleUrls: ['./addperson.component.scss']\n})\nexport class AddpersonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PersonComponent } from './person.component';\n\nconst routes: Routes = [ {\n  path: '',\n  component: PersonComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PersonRoutingModule { }\n","module.exports = \"<div class=\\\"mb-20\\\">\\n    Persons\\n  </div>\\n  <div class=\\\"mb-20\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxFlex>\\n    <div fxFlex>\\n      <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" />\\n      </mat-form-field>\\n    </div>\\n    <div fxFlex>\\n      <button style=\\\"float:right\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"openDialog()\\\">\\n        <mat-icon>add</mat-icon>\\n      </button>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n      <ng-container matColumnDef=\\\"Select\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox\\n            (change)=\\\"$event ? masterToggle() : null\\\"\\n            [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n            [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n            [aria-label]=\\\"checkboxLabel()\\\"\\n          >\\n          </mat-checkbox>\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox\\n            (click)=\\\"$event.stopPropagation()\\\"\\n            (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n            [checked]=\\\"selection.isSelected(row)\\\"\\n            [aria-label]=\\\"checkboxLabel(row)\\\"\\n          >\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"Id\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.Id }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Name\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.Name }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Email\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.Email }}</td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"Contact\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Contact</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{ row.ContactNo }}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"Actions\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n          <button mat-icon-button color=\\\"primary\\\">\\n            <mat-icon mat-icon-button (click)=\\\"openDialog(row)\\\">edit</mat-icon>\\n          </button>\\n          <button mat-icon-button color=\\\"warn\\\">\\n            <mat-icon mat-icon-button (click)=\\\"deleteCustomer(row)\\\">delete</mat-icon>\\n          </button>\\n        </td>\\n      </ng-container>\\n  \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n    </table>\\n  \\n    <mat-paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[1, 5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  \"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9wZXJzb24vcGVyc29uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog, MatDialogConfig } from '@angular/material';\nimport { LoginResponse } from 'src/app/login/login';\nimport { NotificationService } from 'src/app/shared/services/notification.service';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { AddpersonComponent } from './addperson/addperson.component';\nimport { Person } from './person';\nimport { PersonService } from './person.service';\nimport { CustomerList, Customer } from '../customer/customer';\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.scss']\n})\nexport class PersonComponent implements OnInit {\n  displayedColumns = ['Select', 'Id', 'Name', 'Email', 'Phone', 'Qualification', 'Marital Status', 'Relation', 'Actions'];\n  dataSource: MatTableDataSource<Person>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  selection = new SelectionModel<Person>(true, []);\n\n  constructor(public dialog: MatDialog, private notificationService: NotificationService, private personService: PersonService) {}\n\n  ngOnInit() {\n    this.getAllPerson();\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected() ? this.selection.clear() : this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  checkboxLabel(row?: Person): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.Id + 1}`;\n  }\n\n  openDialog(row: Person) {\n    const dialogConfig = new MatDialogConfig();\n    if (row != null && row !== undefined) {\n      dialogConfig.data = {\n        Id: row.Id,\n        Title: 'Edit Person',\n        FirstName: row.FirstName,\n        MidddleName: row.MiddleName,\n        Phone: row.Phone,\n        Gender: row.Gender\n      };\n    } else {\n      dialogConfig.data = {\n        Id: 0,\n        Title: 'Add Person',\n        FirstName: '',\n        MidddleName: '',\n        Phone: '',\n        Gender: ''\n      };\n    }\n    dialogConfig.width = '500px';\n    dialogConfig.height = '500px';\n    const dialogRef = this.dialog.open(AddpersonComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      this.getAllPerson();\n    });\n  }\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  getAllPerson() {\n    // const result = this.personService.getList(localStorage.getItem('id')).subscribe(\n    //   (data: CustomerList) => {\n    //     const custs: Customer[] = [];\n    //     for (const v in data) {\n    //       custs.push(data[v]);\n    //     }\n    //     this.dataSource = new MatTableDataSource(custs);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   },\n    //   error => {\n    //     console.log(error);\n    //   }\n    // );\n  }\n\n  deleteCustomer(row) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PersonRoutingModule } from './person-routing.module';\nimport { AddpersonComponent } from './addperson/addperson.component';\nimport { PersonComponent } from './person.component';\nimport {\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatOptionModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatSnackBarModule,\n  MatTooltipModule,\n  MatCheckboxModule\n} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [PersonComponent, AddpersonComponent],\n  imports: [\n    CommonModule,\n    CommonModule,\n    MatCheckboxModule,\n    PersonRoutingModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule.withConfig({ addFlexToParent: false })\n  ],\n  entryComponents: [AddpersonComponent]\n})\nexport class PersonModule {}\n","import { Injectable } from '@angular/core';\nimport { Apiurl } from 'src/app/shared/apiurl';\nimport { Observable } from 'rxjs';\nimport { CustomerList, Customer } from '../customer/customer';\nimport { LoginResponse } from 'src/app/login/login';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n  constructor(private http: HttpClient) { }\n\n  url = Apiurl.apiurl;\n  getList(id: string): Observable<CustomerList> {\n    return this.http.get<CustomerList>(this.url + 'GetCustomer?parentId=' + 1, {});\n  }\n\n  saveCustomer(customer: Customer): Observable<LoginResponse> {\n    return this.http.post<LoginResponse>(this.url + 'AddCustomer', customer);\n  }\n\n  deleteCustomer(id: number): Observable<LoginResponse> {\n    return this.http.delete<LoginResponse>(this.url + 'DeleteCustomer/' + id);\n  }\n}\n"],"sourceRoot":""}