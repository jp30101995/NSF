{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/http-interceptor/auth-interceptor.ts","webpack:///./src/app/http-interceptor/index.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./blank-page/blank-page.module\": [\n\t\t\"./src/app/layout/blank-page/blank-page.module.ts\",\n\t\t\"blank-page-blank-page-module\"\n\t],\n\t\"./charts/charts.module\": [\n\t\t\"./src/app/layout/charts/charts.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"charts-charts-module\"\n\t],\n\t\"./customer/customer.module\": [\n\t\t\"./src/app/layout/customer/customer.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"customer-customer-module\"\n\t],\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/layout/dashboard/dashboard.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"dashboard-dashboard-module\"\n\t],\n\t\"./forms/forms.module\": [\n\t\t\"./src/app/layout/forms/forms.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"forms-forms-module\"\n\t],\n\t\"./grid/grid.module\": [\n\t\t\"./src/app/layout/grid/grid.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"grid-grid-module\"\n\t],\n\t\"./layout/layout.module\": [\n\t\t\"./src/app/layout/layout.module.ts\",\n\t\t\"layout-layout-module\"\n\t],\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"login-login-module\"\n\t],\n\t\"./material-components/material-components.module\": [\n\t\t\"./src/app/layout/material-components/material-components.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"material-components-material-components-module\"\n\t],\n\t\"./person/person.module\": [\n\t\t\"./src/app/layout/person/person.module.ts\",\n\t\t\"default~charts-charts-module~customer-customer-module~dashboard-dashboard-module~forms-forms-module~~fa0541e8\",\n\t\t\"common\",\n\t\t\"person-person-module\"\n\t],\n\t\"./tables/tables.module\": [\n\t\t\"./src/app/layout/tables/tables.module.ts\",\n\t\t\"tables-tables-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: './layout/layout.module#LayoutModule',\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'login',\r\n        loadChildren: './login/login.module#LoginModule'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private translate: TranslateService) {\r\n    translate.setDefaultLang('en');\r\n  }\r\n  ngOnInit() {}\r\n}\r\n","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule, MatIconModule, MatListModule, MatSidenavModule, MatToolbarModule } from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MatSnackBarModule } from '@angular/material';\r\n\r\nimport { AuthService } from './auth.service';\r\nimport { httpInterceptorProviders } from './http-interceptor/index';\r\n// AoT requires an exported function for factories\r\nexport const createTranslateLoader = (http: HttpClient) => {\r\n  /* for development\r\n    return new TranslateHttpLoader(\r\n        http,\r\n        '/start-javascript/sb-admin-material/master/dist/assets/i18n/',\r\n        '.json'\r\n    );*/\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n};\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatSnackBarModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    OverlayModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  providers: [AuthService, httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { isUndefined, isNullOrUndefined } from 'util';\r\nimport { LoginResponse, Login } from './login/login';\r\n/** Mock client-side authentication/authorization service */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  url = 'http://10.33.16.14:8087/api/Authenticate';\r\n  constructor(private http: HttpClient) {}\r\n  getAuthorizationToken() {\r\n    if (localStorage.getItem('authToken')) {\r\n      return localStorage.getItem('authToken');\r\n    } else {\r\n      return '';\r\n    }\r\n    // if (localStorage.getItem('authToken')) {\r\n    //   // return localStorage.getItem('authToken');\r\n    //   return true;\r\n    // } else {\r\n    // const httpOptions = {\r\n    //   headers: new HttpHeaders({\r\n    //     'Content-Type': 'application/json'\r\n    //   })\r\n    // };\r\n    // // return '';\r\n    // this.http.post<string>(this.url, {}, httpOptions)\r\n    // .subscribe(\r\n    //   (data: string) => {\r\n    //     localStorage.setItem('authToken', data);\r\n    //      //return data['message'];\r\n    //   },\r\n    //   error => {\r\n    //     console.log(error);\r\n    //      //return '';\r\n    //   }\r\n    // );\r\n  }\r\n  //   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { LoginResponse } from '../login/login';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    // Get the auth token from the service.\r\n    const authToken = this.auth.getAuthorizationToken();\r\n     // localStorage.getItem('authToken');\r\n    //  .subscribe(\r\n    //     (data: LoginResponse) => {\r\n    //         console.log(data['Message']);\r\n    //       // return localStorage.setItem('authToken', data['Message']);\r\n    //     },\r\n    //     error => {\r\n    //       console.log(error);\r\n    //     }\r\n    //   );\r\n\r\n    /*\r\n    * The verbose way:\r\n    // Clone the request and replace the original headers with\r\n    // cloned headers, updated with the authorization.\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', authToken)\r\n    });\r\n    */\r\n    // Clone the request and set the new header in one step.\r\n    const authReq = req.clone({ setHeaders: { Authorization: authToken, 'Content-Type': 'application/json' } });\r\n\r\n    // send cloned request with header to the next handler.\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth-interceptor';\r\n// import { CachingInterceptor } from './caching-interceptor';\r\n// import { EnsureHttpsInterceptor } from './ensure-https-interceptor';\r\n// import { LoggingInterceptor } from './logging-interceptor';\r\n// import { NoopInterceptor } from './noop-interceptor';\r\n// import { TrimNameInterceptor } from './trim-name-interceptor';\r\n// import { UploadInterceptor } from './upload-interceptor';\r\n\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n//   { provide: HTTP_INTERCEPTORS, useClass: NoopInterceptor, multi: true },\r\n\r\n//   { provide: HTTP_INTERCEPTORS, useClass: EnsureHttpsInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: TrimNameInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: UploadInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true },\r\n\r\n];\r\n\r\n\r\n/*\r\nCopyright 2017-2018 Google Inc. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at http://angular.io/license\r\n*/\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate() {\r\n        if (localStorage.getItem('isLoggedin')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}